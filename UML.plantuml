@startuml

class DatabaseManager <<(S, #FF7700)>> {
    - {static} sharedManager : DatabaseManager

    -- shared instance --
    - DatabaseManager()
    + {static} getSharedManager() : DatabaseManager
}

class FileManager <<(S, #FF7700)>> {
    - {static} sharedManager : FileManager

    -- shared instance --
    - SharedManager()
    + {static} getSharedManager() : FileManager
}

class Player <<(S, #FF7700)>> {
    - currentTrack : Track
    - {static} sharedPlayer : Player

    -- shared instance --
    - Player()
    + {static} getSharedPlayer() : Player

    -- music controls --
    + next() : void
    + pause() : void
    + play() : void
    + previous() : void
    + stop() : void
}

class Playlist {
    - databaseManager : DatabaseManager
    - name : String
    - tracks : List<Track>
    - voteManager : VoteManager

    -- getters/setters --
    + getName() : String
    + setName(name : String) : void

    -- tracks interaction --
    + addTrack(track : Track) : void
    + deleteTrack(track : Track) : void
    + getTrack() : Track
    + getTracks() : List<Track>
    + removeTrack(track : Track) : void
}

class PlaylistManager <<(S, #FF7700)>> {
    - databaseManager : DatabaseManager
    - {static} sharedManager : PlaylistManager
    - playlists : List<Playlist>

    -- shared instance --
    - PlaylistManager()
    + {static} getSharedManager() : PlaylistManager
}

class Track {
    - addedDate : Timestamp
    - album : String
    - artist : String
    - duration : double
    - playedDate : Timestamp
    - title : String
    - uri : String

    + getAddedDate() : Timestamp
    + getAlbum() : String
    + getArtist() : String
    + getDuration() : double
    + getPlayedDate() : Timestamp
    + getTitle() : String
    + getUri() : String
}

class VoteManager {
    - votes : Map<Track, Integer> votes

    + downvote(track : Track) : int
    + upvote(track : Track) : int
}

FileManager -right> "1" DatabaseManager

Player -() MediaPlayer

Playlist --> "1" DatabaseManager
Playlist "1" --> "0..*" Track
Playlist "1" -> "1" VoteManager

PlaylistManager -left> "1" DatabaseManager
PlaylistManager "1" --> "0..*" Playlist

Track "1" <- Player

note as note1
    Les classes représentées
    par "S" sont des singletons.
endnote

note left of Playlist
    Différence entre
    ""deleteTrack()"" et
    ""removeTrack()""?
endnote

@enduml


Player <..> Playlist

Track <..> VoteManager

VoteManager <..> Playlist

StorageManager <..> Playlist

Playlist <..> PlaylistManager

NetworkManager <..> StorageManager



@enduml

@startuml

    namespace ch.tofind.commusica.core {

        abstract class AbstractCore {
            [[AbstractCore.html]]
            {static} -LOG: Logger
            +execute(String, ArrayList<Object>): String
            {abstract} ~sendUnicast(InetAddress, String): void
            {abstract} ~sendMulticast(String): void
            {abstract} ~stop(): void
            {abstract} ~isServer(): boolean
        }

        class ServerCore {
            [[ServerCore.html]]
            {static} -LOG: Logger
            {static} -TIME_BEFORE_PLAYLIST_UPDATE: int
            {static} -name: String
            -multicast: MulticastClient
            -server: Server
            -userSessionManager: UserSessionManager
            -broadcastPlaylist: ScheduledExecutorService
            +END_OF_COMMUNICATION(ArrayList<Object>): String
            +SEND_PLAYLIST_UPDATE(ArrayList<Object>): String
            +NEW_ACTIVE_CLIENT(ArrayList<Object>): String
            +TRACK_REQUEST(ArrayList<Object>): String
            +SENDING_TRACK(ArrayList<Object>): String
            +UPVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +DOWNVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_NEXT_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_PLAY_PAUSE_REQUEST(ArrayList<Object>): String
            +SEND_UPVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_DOWNVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +PLAY_PAUSE_REQUEST(ArrayList<Object>): String
            +NEXT_TRACK_REQUEST(ArrayList<Object>): String
            +PREVIOUS_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_TURN_VOLUME_UP_REQUEST(ArrayList<Object>): String
            +TURN_VOLUME_UP_REQUEST(ArrayList<Object>): String
            +SEND_TURN_VOLUME_DOWN_REQUEST(ArrayList<Object>): String
            +TURN_VOLUME_DOWN_REQUEST(ArrayList<Object>): String
            +sendUnicast(InetAddress, String): void
            +sendMulticast(String): void
            +stop(): void
            +isServer(): boolean
        }

        class ClientCore {
            [[ClientCore.html]]
            {static} -LOG: Logger
            -multicast: MulticastClient
            -client: UnicastClient
            -fileToSend: File
            -trackToSend: Track
            -serverSessionManager: ServerSessionManager
            -threadPool: ExecutorService
            +END_OF_COMMUNICATION(ArrayList<Object>): String
            +PLAYLIST_UPDATE(ArrayList<Object>): String
            +SEND_FIRST_CONNECTION(ArrayList<Object>): String
            +SEND_TRACK_REQUEST(ArrayList<Object>): String
            +TRACK_ACCEPTED(ArrayList<Object>): String
            +TRACK_REFUSED(ArrayList<Object>): String
            +TRACK_SAVED(ArrayList<Object>): String
            +SEND_PLAY_PAUSE_REQUEST(ArrayList<Object>): String
            +SEND_NEXT_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_PREVIOUS_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_TURN_VOLUME_UP_REQUEST(ArrayList<Object>): String
            +SEND_TURN_VOLUME_DOWN_REQUEST(ArrayList<Object>): String
            +SEND_UPVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +SEND_DOWNVOTE_TRACK_REQUEST(ArrayList<Object>): String
            +TRACK_UPVOTED(ArrayList<Object>): String
            +TRACK_DOWNVOTED(ArrayList<Object>): String
            +ERROR(ArrayList<Object>): String
            +SUCCESS(ArrayList<Object>): String
            +sendUnicast(InetAddress, String): void
            +sendMulticast(String): void
            +stop(): void
            +isServer(): boolean
        }

        class Core {
            [[Core.html]]
            {static} -instance: AbstractCore
            {static} +execute(String, ArrayList<Object>): String
            {static} +isServer(): boolean
            {static} +setupAsServer(): void
            {static} +setupAsClient(): void
            {static} +stop(): void
        }

        class ApplicationProtocol {
            [[ApplicationProtocol.html]]
            {static} +myId: Integer
            {static} +serverId: Integer
            {static} +serverAddress: InetAddress
            {static} +serverName: String
            {static} +SUCCESS: String
            {static} +ERROR: String
            {static} +SEND_FIRST_CONNECTION: String
            {static} +TRACK_REQUEST: String
            {static} +TRACK_ACCEPTED: String
            {static} +TRACK_REFUSED: String
            {static} +TRACK_SAVED: String
            {static} +SENDING_TRACK: String
            {static} +SEND_UPVOTE_TRACK_REQUEST: String
            {static} +SEND_DOWNVOTE_TRACK_REQUEST: String
            {static} +UPVOTE_TRACK_REQUEST: String
            {static} +DOWNVOTE_TRACK_REQUEST: String
            {static} +TRACK_DOWNVOTED: String
            {static} +TRACK_UPVOTED: String
            {static} +PLAYLIST_UPDATE: String
            {static} +NEW_ACTIVE_CLIENT: String
            {static} +SEND_PLAYLIST_UPDATE: String
            {static} +SEND_TRACK_REQUEST: String
            {static} +SEND_PLAY_PAUSE_REQUEST: String
            {static} +PLAY_PAUSE_REQUEST: String
            {static} +PLAY: String
            {static} +PAUSE: String
            {static} +SEND_NEXT_TRACK_REQUEST: String
            {static} +NEXT_TRACK_REQUEST: String
            {static} +SEND_PREVIOUS_TRACK_REQUEST: String
            {static} +PREVIOUS_TRACK_REQUEST: String
            {static} +SEND_TURN_VOLUME_UP_REQUEST: String
            {static} +TURN_VOLUME_UP_REQUEST: String
            {static} +VOLUME_TURNED_UP: String
            {static} +SEND_TURN_VOLUME_DOWN_REQUEST: String
            {static} +TURN_VOLUME_DOWN_REQUEST: String
            {static} +VOLUME_TURNED_DOWN: String
            {static} +SUCCESS_VOTE: String
            {static} +ERROR_VOTE: String
            {static} +ERROR_DURING_TRANSFER: String
            {static} +ERROR_FILE_NOT_SUPPORTED: String
        }

        interface ICore {
            [[ICore.html]]
            {abstract} +sendUnicast(InetAddress, String): void
            {abstract} +sendMulticast(String): void
            {abstract} +stop(): void
        }

        AbstractCore <|-- ServerCore

        ICore <|.. ServerCore

        AbstractCore <|-- ClientCore

        ICore <|.. ClientCore

    }

@enduml
